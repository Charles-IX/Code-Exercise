# 假如未来的某一天，我校人工智能实验室的成员们要外出团建，吃过饭后，2023级的成员决定组团去抓一次娃娃。抓娃娃机每次要求投入两枚硬币，且这两枚硬币的面值总和不超过 K 。
# 而在投硬币的时候，Frex 心生一计：他把手中的硬币分成两组，一组有 N 枚，一组有 M 枚；现在他要从这两组中分别拿取一枚硬币作为本次要投入的两枚硬币，请问他有多少种拿法？

# 输入格式:
# 第一行包含一个整数 t ( 1 ≤ t ≤ 100 ) 作为测试用例的数量。然后是t个测试用例。
# 每个测试用例的第一行包含三个自然数 N 、 M 和 K ( 1 ≤ N, M ≤ 100, 1 ≤ K ≤ 2000 ) 分别是两组硬币的数量，和在投入硬币时两个硬币的最大金额。
# 每个测试用例的第二行包含 N 个整数 n ( 1 ≤ n ≤ 1000 ) 作为第一组中硬币的面值。
# 每个测试用例的第三行包含 M 个整数 m ( 1 ≤ m ≤ 1000 ) 作为第二组中硬币的面值。

# 输出格式:
# 对于每个测试用例，输出一个整数，即 Frex 投入硬币组合的组合数量。

t = int(input())
for _ in range(t):
    cp = 0
    N, M, K = map(int, input().split())
    n = list(map(int, input().split()))
    m = list(map(int, input().split()))
    n.sort()
    m.sort()

    for item_m in m:
        for item_n in n:
            if item_m + item_n <= K:
                cp += 1
            else:
                break
    print(cp)
