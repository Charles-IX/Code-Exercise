# 在ICPC竞赛中，气球分发规则如下：
# 每当一个队解决一个问题，该队获得一个气球。
# 第一个解决某一问题的队伍会额外获得一个气球。
# 一场竞赛有 26 个问题，标记为 A，B，C，...，Z 。你被给定了竞赛中解决问题的顺序，用字符串 s 表示.
# 没有队伍会两次解决同一个问题，确定本次发放的总气球数。
# 请注意，某些问题可能没有被任何队伍解决。

# 输入格式:
# 输入的第一行包含一个整数 t (1≤t≤100) — 测试用例的数量。
# 每个测试用例的第一行包含一个整数 n (1≤n≤50) — 字符串的长度。
# 每个测试用例的第二行包含一个长度为 n 的字符串 s，由大写英文字母组成，表示解决问题的顺序。

# 输出格式:
# 对于每个测试用例，输出一个整数 — 需要发放的总气球数。

t = int(input())
for _ in range(t):
    n = int(input())
    sum = 0
    s = input()
    count = {}
    for char in s:
        if char in count:
            count[char] += 1
        else:
            count[char] = 1
    for key in count.values():
        sum += key + 1
    print(sum)
    